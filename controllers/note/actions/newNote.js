'use strict';

/**
 * Create a new private note
 *
 * Pre-conditions:
 *    # user has been authenticated
 *    # req.processed.note must exist
 */

module.exports = exports;
var settings = require('../../../settings.js');

/**
 * Dependencies
 */
//Controller helpers
var helperGlobal = require(settings.ctrlsPath + '/_helpers').global;
var helperActions = require(settings.ctrlsPath + '/_helpers').actions;

// Services
var iWASession = require(settings.servicesPath + '/iwazat/session');

//System Entities
var iWAErrors = require(settings.sysPath + '/entities/errors');

// Database (MongoDB)
var iWAMongo = require(settings.dataSourcesPath + '/iwaMongo');
var iWANote = require(settings.modelsPath + '/iwazat/note');


module.exports = function (req, res, next, post) {

  if (helperActions.respAllIssues(req, res, post)) {
    return;
  }

  var userId = iWASession.getAuthUser(req.session).id;
  var note = req.processed.note
  var NoteModel;

  if (note._id !== undefined) {
    // The notes' id document are generated by the backend, so new notes mustn't carry an _id field
    helperGlobal.addError(req,
      new iWAErrors.Db('Controller: note # Action: newNote | The new note carry an _id attribute, ' +
        'so it doesn\'t fit to the "new notes" rules policy', 603), 603);
    sendResponse(req, res, post);
    return;
  }

  NoteModel = iWAMongo.model(iWANote, iWANote.mongooseModelOptions(userId));

  NoteModel.create(note, function (err, note) {
    if (err) {
      helperGlobal.addError(req,
        new iWAErrors.Db('Controller: note # Action: newNote | Error when creating the new note',
          521, err), 521);
      sendResponse(req, res, post);
    } else {
      sendResponse(req, res, post, note.toJSON());
    }
  });
};


function sendResponse(req, res, post, note) {

  // is there errors the helper will send the response
  if (helperActions.respAllIssues(req, res, post)) {
    return;
  }

  res.json(200, note);
  post(null, req, res);
}